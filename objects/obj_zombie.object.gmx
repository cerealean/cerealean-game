<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_zombie_stance_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_controller</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
defaultSpeed = 3;
image_speed = (defaultSpeed/room_speed);
enemyMaxHealth = 20;
enemyHealth = 20;
enemyStrength = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Slam attack
if(!IsNextToPlayer(defaultSpeed)){
    alarm[1] = -1;
}
else {
    health -= enemyStrength;
    alarm[1] = GetStepsFromSeconds(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement and stance sprite
var isNextToPlayer = IsNextToPlayer(defaultSpeed);
var facing = DetermineFacingDirection(direction);
switch(facing){
    case Facing.Up:
        if(speed &gt; 0){
            sprite_index = spr_zombie_move_up;
        }
        else if(isNextToPlayer){
            sprite_index = spr_zombie_slam_up;
        }
        else{
            sprite_index = spr_zombie_stance_up;
        }
        break;
    case Facing.UpLeft:
        if(speed &gt; 0){
            sprite_index = spr_zombie_move_up_left;
        }
        else if(isNextToPlayer){
            sprite_index = spr_zombie_slam_up_left;
        }
        else{
            sprite_index = spr_zombie_stance_up_left;
        }
        break;
    case Facing.UpRight:
        if(speed &gt; 0){
            sprite_index = spr_zombie_move_up_right;
        }
        else if(isNextToPlayer){
            sprite_index = spr_zombie_slam_up_right;
        }
        else{
            sprite_index = spr_zombie_stance_up_right;
        }
        break;
    case Facing.Right:
        if(speed &gt; 0){
            sprite_index = spr_zombie_move_right;
        }
        else if(isNextToPlayer){
            sprite_index = spr_zombie_slam_right;
        }
        else{
            sprite_index = spr_zombie_stance_right;
        }
        break;
    case Facing.Left:
        if(speed &gt; 0){
            sprite_index = spr_zombie_move_left;
        }
        else if(isNextToPlayer){
            sprite_index = spr_zombie_slam_left;
        }
        else{
            sprite_index = spr_zombie_stance_left;
        }
        break;
    case Facing.Down:
        if(speed &gt; 0){
            sprite_index = spr_zombie_move_down;
        }
        else if(isNextToPlayer){
            sprite_index = spr_zombie_slam_down;
        }
        else{
            sprite_index = spr_zombie_stance_down;
        }
        break;
    case Facing.DownRight:
        if(speed &gt; 0){
            sprite_index = spr_zombie_move_down_right;
        }
        else if(isNextToPlayer){
            sprite_index = spr_zombie_slam_down_right;
        }
        else{
            sprite_index = spr_zombie_stance_down_right;
        }
        break;
    case Facing.DownLeft:
        if(speed &gt; 0){
            sprite_index = spr_zombie_move_down_left;
        }
        else if(isNextToPlayer){
            sprite_index = spr_zombie_slam_down_left;
        }
        else{
            sprite_index = spr_zombie_stance_down_left;
        }
        break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement Behavior
var distanceToPlayer = distance_to_object(obj_hero);
var isCloseToPlayer = distanceToPlayer &lt;= defaultSpeed * 20;
var isNextToPlayer = distanceToPlayer &lt;= defaultSpeed;
if(isNextToPlayer){
    SetObjectSpeed(0);
}
else if(isCloseToPlayer &amp;&amp; IsNextStepFree(defaultSpeed)){
    alarm[0] = -1;
    direction = point_direction(x,y,obj_hero.x,obj_hero.y);
    SetObjectSpeed(defaultSpeed);
}
else if(!isCloseToPlayer &amp;&amp; alarm[0] == -1){
    alarm[0] = room_speed * 4;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start Slam Attack Alarm
if(alarm[1] == -1 &amp;&amp; IsNextToPlayer(defaultSpeed)){
    image_speed = (defaultSpeed / room_speed);
    alarm[1] = GetStepsFromSeconds(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
